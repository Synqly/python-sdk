# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ...common.types.base_resource_request import BaseResourceRequest
from .priority import Priority

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class CreateTicketRequest(BaseResourceRequest):
    summary: str = pydantic.Field(description="Ticket summary.")
    creator: typing.Optional[str] = pydantic.Field(description="User who created this ticket.")
    assignee: typing.Optional[str] = pydantic.Field(description="Who ticket is assigned to.")
    contact: typing.Optional[str] = pydantic.Field(description="Ticket contact information.")
    description: typing.Optional[str] = pydantic.Field(description="Ticket description.")
    priority: typing.Optional[Priority] = pydantic.Field(description="The priority of the Ticket")
    due_date: typing.Optional[dt.datetime] = pydantic.Field(description="The ticket's due date.")
    completion_date: typing.Optional[dt.datetime] = pydantic.Field(description="The ticket's complete date.")
    status: typing.Optional[str] = pydantic.Field(description="The current status of the ticket.")
    project: typing.Optional[str] = pydantic.Field(description="The ticket project.")
    issue_type: typing.Optional[str] = pydantic.Field(description="The ticket's type.")
    attachments: typing.Optional[typing.List[str]] = pydantic.Field(description="Associate attachment URLs with ticket")
    tags: typing.Optional[typing.List[str]] = pydantic.Field(description="Associate tags with Ticket")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
