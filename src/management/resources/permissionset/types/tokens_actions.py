# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class TokensActions(str, enum.Enum):
    LIST = "list"
    CREATE = "create"
    GET = "get"
    RESET = "reset"
    REFRESH = "refresh"
    REMOVE_SECONDARY = "remove_secondary"
    ALL = "*"

    def visit(
        self,
        list: typing.Callable[[], T_Result],
        create: typing.Callable[[], T_Result],
        get: typing.Callable[[], T_Result],
        reset: typing.Callable[[], T_Result],
        refresh: typing.Callable[[], T_Result],
        remove_secondary: typing.Callable[[], T_Result],
        all: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is TokensActions.LIST:
            return list()
        if self is TokensActions.CREATE:
            return create()
        if self is TokensActions.GET:
            return get()
        if self is TokensActions.RESET:
            return reset()
        if self is TokensActions.REFRESH:
            return refresh()
        if self is TokensActions.REMOVE_SECONDARY:
            return remove_secondary()
        if self is TokensActions.ALL:
            return all()
