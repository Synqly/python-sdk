# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from .crowdstrike_hec_credential import CrowdstrikeHecCredential

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class SinkCrowdstrikeHec(pydantic.BaseModel):
    """
    Configuration for Crowdstrike HEC as a Sink Provider
    """

    credential: CrowdstrikeHecCredential
    url: str = pydantic.Field()
    """
    API URL for the CrowdStrike HEC API. This must be an HTTPS URL, for example "https://<some-guid>.ingest.us-2.crowdstrike.com/services/collector".
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
