# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from ...credentials.types.token_credential import TokenCredential
from ...credentials.types.token_credential_id import TokenCredentialId
from .splunk_bridge_hec_token import SplunkBridgeHecToken

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class SplunkHecToken_Bridge(pydantic.BaseModel):
    type: typing.Literal["bridge"]
    value: SplunkBridgeHecToken

    class Config:
        frozen = True
        smart_union = True


class SplunkHecToken_Token(TokenCredential):
    type: typing.Literal["token"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class SplunkHecToken_TokenId(pydantic.BaseModel):
    type: typing.Literal["token_id"]
    value: TokenCredentialId

    class Config:
        frozen = True
        smart_union = True


SplunkHecToken = typing.Union[SplunkHecToken_Bridge, SplunkHecToken_Token, SplunkHecToken_TokenId]
