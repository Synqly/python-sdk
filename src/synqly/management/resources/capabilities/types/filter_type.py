# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class FilterType(str, enum.Enum):
    STRING = "string"
    DATETIME = "datetime"
    ENUM = "enum"
    BOOLEAN = "boolean"
    NUMBER = "number"

    def visit(
        self,
        string: typing.Callable[[], T_Result],
        datetime: typing.Callable[[], T_Result],
        enum: typing.Callable[[], T_Result],
        boolean: typing.Callable[[], T_Result],
        number: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is FilterType.STRING:
            return string()
        if self is FilterType.DATETIME:
            return datetime()
        if self is FilterType.ENUM:
            return enum()
        if self is FilterType.BOOLEAN:
            return boolean()
        if self is FilterType.NUMBER:
            return number()
