# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class BuiltinRoles(str, enum.Enum):
    ROOT_ADMINISTRATOR = "root_administrator"
    ADMINISTRATOR = "administrator"
    VIEWER = "viewer"
    MEMBER = "member"

    def visit(
        self,
        root_administrator: typing.Callable[[], T_Result],
        administrator: typing.Callable[[], T_Result],
        viewer: typing.Callable[[], T_Result],
        member: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is BuiltinRoles.ROOT_ADMINISTRATOR:
            return root_administrator()
        if self is BuiltinRoles.ADMINISTRATOR:
            return administrator()
        if self is BuiltinRoles.VIEWER:
            return viewer()
        if self is BuiltinRoles.MEMBER:
            return member()
