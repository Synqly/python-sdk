# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ResourceId(str, enum.Enum):
    DEVICES = "devices"
    EVENTS = "events"
    INVESTIGATIONS = "investigations"
    LOG_PROVIDERS = "log_providers"
    EVIDENCE = "evidence"

    def visit(
        self,
        devices: typing.Callable[[], T_Result],
        events: typing.Callable[[], T_Result],
        investigations: typing.Callable[[], T_Result],
        log_providers: typing.Callable[[], T_Result],
        evidence: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ResourceId.DEVICES:
            return devices()
        if self is ResourceId.EVENTS:
            return events()
        if self is ResourceId.INVESTIGATIONS:
            return investigations()
        if self is ResourceId.LOG_PROVIDERS:
            return log_providers()
        if self is ResourceId.EVIDENCE:
            return evidence()
