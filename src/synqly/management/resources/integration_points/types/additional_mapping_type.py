# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class AdditionalMappingType(str, enum.Enum):
    RECOMMENDED = "recommended"
    OPTIONAL = "optional"
    FIXED = "fixed"

    def visit(
        self,
        recommended: typing.Callable[[], T_Result],
        optional: typing.Callable[[], T_Result],
        fixed: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is AdditionalMappingType.RECOMMENDED:
            return recommended()
        if self is AdditionalMappingType.OPTIONAL:
            return optional()
        if self is AdditionalMappingType.FIXED:
            return fixed()
