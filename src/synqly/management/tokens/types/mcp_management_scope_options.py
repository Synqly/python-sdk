# This file was auto-generated by Fern from our API Definition.

from ...core.unchecked_base_model import UncheckedBaseModel
import typing
from ...organization_base.types.environment import Environment
import pydantic
from ...account_base.types.account_id import AccountId
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class McpManagementScopeOptions(UncheckedBaseModel):
    environment: typing.Optional[Environment] = pydantic.Field(default=None)
    """
    Optionally restrict access to a specific environment.
    """

    account_id: typing.Optional[AccountId] = pydantic.Field(default=None)
    """
    Optionally restrict access to a specific account. This is recommended for production use cases. If provided, this overrides any `environment` restriction.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
