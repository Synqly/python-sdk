# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

from ...capabilities_base.types.category_id import CategoryId
from ...capabilities_base.types.provider_id import ProviderId
from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ...core.unchecked_base_model import UncheckedBaseModel


class Connector(UncheckedBaseModel):
    """
    Provides details of the Connector.
    """

    id: CategoryId = pydantic_v1.Field()
    """
    Unique identifier for the Connector.
    """

    name: CategoryId = pydantic_v1.Field()
    """
    Name of the connector.
    """

    fullname: str = pydantic_v1.Field()
    """
    Display name of the Connector.
    """

    description: str = pydantic_v1.Field()
    """
    Description of the Connector.
    """

    provider_ids: typing.List[ProviderId] = pydantic_v1.Field()
    """
    List of Providers that implement the Connector.
    """

    providers: typing.Optional[typing.List[ProviderCapabilities]] = pydantic_v1.Field(default=None)
    """
    List of capabilities for Providers that implement the Connector.
    """

    connector: typing.Optional[CategoryId] = pydantic_v1.Field(default=None)
    """
    DEPRECATED â€“ use `id` instead.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}


from .provider_capabilities import ProviderCapabilities  # noqa: E402

Connector.update_forward_refs()
