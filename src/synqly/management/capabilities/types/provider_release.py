# This file was auto-generated by Fern from our API Definition.

from ...core.unchecked_base_model import UncheckedBaseModel
from .provider_availability import ProviderAvailability
import pydantic
import typing
from .provider_environment import ProviderEnvironment
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class ProviderRelease(UncheckedBaseModel):
    availability: ProviderAvailability = pydantic.Field()
    """
    Availability status.
    """

    environments: typing.List[ProviderEnvironment] = pydantic.Field()
    """
    Environments the Provider is available to.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
