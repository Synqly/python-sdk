# This file was auto-generated by Fern from our API Definition.

from ...core.unchecked_base_model import UncheckedBaseModel
import typing
from ...providers_generated.types.provider_config_id import ProviderConfigId
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class IntegrationEnvironments(UncheckedBaseModel):
    test: typing.Optional[typing.List[ProviderConfigId]] = pydantic.Field(default=None)
    """
    List of allowed providers for test environment.
    """

    prod: typing.Optional[typing.List[ProviderConfigId]] = pydantic.Field(default=None)
    """
    List of allowed providers for production environment.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
