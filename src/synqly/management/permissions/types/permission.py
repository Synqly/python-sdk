# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...common.types.id import Id
from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ...core.unchecked_base_model import UncheckedBaseModel
from ...role_base.types.adhoc_role import AdhocRole
from ...role_base.types.role_name import RoleName


class Permission(UncheckedBaseModel):
    role_binding: typing.Optional[typing.List[RoleName]] = pydantic_v1.Field(default=None)
    """
    Roles granted to this token.
    """

    adhoc_role: typing.Optional[AdhocRole] = pydantic_v1.Field(default=None)
    """
    Adhoc role granted to this token.
    """

    resource_id: Id = pydantic_v1.Field()
    """
    ID of the resource that this permission grants access to.
    """

    resource_type: str = pydantic_v1.Field()
    """
    Type of the resource that this permission grants access to. Must be one of the following: "organization, "integration"
    """

    parent_id: Id = pydantic_v1.Field()
    """
    Token parentId
    """

    id: Id = pydantic_v1.Field()
    """
    Token Id
    """

    organization_id: Id = pydantic_v1.Field()
    """
    Token organizationId
    """

    root_organization_id: typing.Optional[Id] = pydantic_v1.Field(default=None)
    """
    Token root organizationId
    """

    member_id: Id = pydantic_v1.Field()
    """
    Token memberId
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
