# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.unchecked_base_model import UncheckedBaseModel
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from ...credentials.types.aws_credential_id import AwsCredentialId
import typing_extensions
from ...core.unchecked_base_model import UnionMetadata


class AwsS3Credential_Aws(UncheckedBaseModel):
    type: typing.Literal["aws"] = "aws"
    access_key_id: str
    secret_access_key: str
    session: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow


class AwsS3Credential_AwsId(UncheckedBaseModel):
    value: AwsCredentialId
    type: typing.Literal["aws_id"] = "aws_id"

    class Config:
        smart_union = True


AwsS3Credential = typing_extensions.Annotated[
    typing.Union[AwsS3Credential_Aws, AwsS3Credential_AwsId],
    UnionMetadata(discriminant="type"),
]
