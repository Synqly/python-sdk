# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ...core.unchecked_base_model import UncheckedBaseModel
from .azure_monitor_logs_credential import AzureMonitorLogsCredential


class SinkAzureMonitorLogs(UncheckedBaseModel):
    """
    Configuration for Azure Monitor Logs as a Sink Provider. Azure Monitor Logs is a feature of Azure Monitor that collects and organizes log and performance data from monitored resources.

    [Configuration guide](https://docs.synqly.com/guides/provider-configuration/azure-monitor-logs)
    """

    client_id: str = pydantic_v1.Field()
    """
    Azure Client (Application) ID.
    """

    credential: AzureMonitorLogsCredential = pydantic_v1.Field()
    """
    Credential with access to the configured data collection endpoint.
    """

    rule_id: str = pydantic_v1.Field()
    """
    Data collection rule immutable ID.
    """

    stream_name: str = pydantic_v1.Field()
    """
    Name of the data collection rule stream.
    """

    tenant_id: str = pydantic_v1.Field()
    """
    Azure Directory (tenant) ID.
    """

    url: str = pydantic_v1.Field()
    """
    URL of the Azure data collection endpoint.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
