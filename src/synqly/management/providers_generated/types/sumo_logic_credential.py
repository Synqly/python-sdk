# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.unchecked_base_model import UncheckedBaseModel
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from ...credentials.types.basic_credential_id import BasicCredentialId
import typing_extensions
from ...core.unchecked_base_model import UnionMetadata


class SumoLogicCredential_Basic(UncheckedBaseModel):
    type: typing.Literal["basic"] = "basic"
    username: str
    secret: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow


class SumoLogicCredential_BasicId(UncheckedBaseModel):
    value: BasicCredentialId
    type: typing.Literal["basic_id"] = "basic_id"

    class Config:
        smart_union = True


SumoLogicCredential = typing_extensions.Annotated[
    typing.Union[SumoLogicCredential_Basic, SumoLogicCredential_BasicId],
    UnionMetadata(discriminant="type"),
]
