# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ....core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ....core.unchecked_base_model import UncheckedBaseModel
from .marking_definition import MarkingDefinition


class GranularMarking(UncheckedBaseModel):
    lang: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The lang property specifies the language used in the properties of the marking_definition object.
    """

    marking_ref: typing.Optional[MarkingDefinition] = pydantic_v1.Field(default=None)
    """
    The marking_ref property specifies the id property of the marking_definition object that applies to this object.
    """

    selectors: typing.List[str] = pydantic_v1.Field()
    """
    The selectors property is an array of strings that represent the selectors that are used to apply the marking_definition object to this object.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
