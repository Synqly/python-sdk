# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ......core.datetime_utils import serialize_datetime
from ......core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ......core.unchecked_base_model import UncheckedBaseModel
from .group import Group
from .request import Request
from .response import Response
from .service import Service


class Api(UncheckedBaseModel):
    """
    The API, or Application Programming Interface, object represents information pertaining to an API request and response.
    """

    group: typing.Optional[Group] = pydantic_v1.Field(default=None)
    """
    The information pertaining to the API group.
    """

    operation: str = pydantic_v1.Field()
    """
    Verb/Operation associated with the request
    """

    request: typing.Optional[Request] = pydantic_v1.Field(default=None)
    """
    Details pertaining to the API request.
    """

    response: typing.Optional[Response] = pydantic_v1.Field(default=None)
    """
    Details pertaining to the API response.
    """

    service: typing.Optional[Service] = pydantic_v1.Field(default=None)
    """
    The information pertaining to the API service.
    """

    version: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The version of the API service.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
