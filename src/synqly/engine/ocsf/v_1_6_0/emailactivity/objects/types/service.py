# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ......core.datetime_utils import serialize_datetime
from ......core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ......core.unchecked_base_model import UncheckedBaseModel
from .key_value_object import KeyValueObject


class Service(UncheckedBaseModel):
    """
    The Service object describes characteristics of a service, <code> e.g. AWS EC2. </code>
    """

    labels: typing.Optional[typing.List[str]] = pydantic_v1.Field(default=None)
    """
    The list of labels associated with the service.
    """

    name: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The name of the service.
    """

    tags: typing.Optional[typing.List[KeyValueObject]] = pydantic_v1.Field(default=None)
    """
    The list of tags; <code>{key:value}</code> pairs associated to the service.
    """

    uid: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The unique identifier of the service.
    """

    version: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The version of the service.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
