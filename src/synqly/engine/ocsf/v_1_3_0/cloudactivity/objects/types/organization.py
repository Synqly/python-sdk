# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ......core.datetime_utils import serialize_datetime
from ......core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ......core.unchecked_base_model import UncheckedBaseModel


class Organization(UncheckedBaseModel):
    """
    The Organization object describes characteristics of an organization or company and its division if any.
    """

    name: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The name of the organization. For example, Widget, Inc.
    """

    ou_name: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The name of the organizational unit, within an organization. For example, Finance, IT, R&D
    """

    ou_uid: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The alternate identifier for an entity's unique identifier. For example, its Active Directory OU DN or AWS OU ID.
    """

    uid: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The unique identifier of the organization. For example, its Active Directory or AWS Org ID.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
