# This file was auto-generated by Fern from our API Definition.

from ......core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from .policy import Policy
from ......core.pydantic_utilities import IS_PYDANTIC_V2


class Authorization(UncheckedBaseModel):
    """
    The Authorization Result object provides details about the authorization outcome and associated policies related to activity.
    """

    decision: typing.Optional[str] = pydantic.Field(default=None)
    """
    Authorization Result/outcome, e.g. allowed, denied.
    """

    policy: typing.Optional[Policy] = pydantic.Field(default=None)
    """
    Details about the Identity/Access management policies that are applicable.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
