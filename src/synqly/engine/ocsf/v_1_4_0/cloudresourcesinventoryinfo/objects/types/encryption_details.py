# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ......core.datetime_utils import serialize_datetime
from ......core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ......core.unchecked_base_model import UncheckedBaseModel
from .encryption_details_algorithm_id import EncryptionDetailsAlgorithmId


class EncryptionDetails(UncheckedBaseModel):
    """
    Details about the encrytpion methodology utilized.
    """

    algorithm: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The encryption algorithm used, normalized to the caption of 'algorithm_id
    """

    algorithm_id: typing.Optional[EncryptionDetailsAlgorithmId] = pydantic_v1.Field(default=None)
    """
    The encryption algorithm used.
    """

    key_length: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    The length of the encryption key used.
    """

    key_uid: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The unique identifier of the key used for encrpytion. For example, AWS KMS Key ARN.
    """

    type: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The type of the encryption used.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
