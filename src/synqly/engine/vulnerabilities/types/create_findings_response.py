# This file was auto-generated by Fern from our API Definition.

from ...engine.types.api_response import ApiResponse
from ...engine.types.query_status import QueryStatus
import pydantic
import typing
from .create_findings_error import CreateFindingsError
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class CreateFindingsResponse(ApiResponse):
    status: QueryStatus = pydantic.Field()
    """
    Specifies the status of the create/import findings job, which can be COMPLETE or PENDING.
    """

    errors: typing.Optional[typing.List[CreateFindingsError]] = pydantic.Field(
        default=None
    )
    """
    Provides additional details about any errors encountered during the create/import operation.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
