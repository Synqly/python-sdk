# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ...core.unchecked_base_model import UncheckedBaseModel
from ...ocsf.v_1_3_0.securityfinding.classes.types.severity_id import SeverityId
from .provider_specific_finding_state import ProviderSpecificFindingState
from .vulnerability_severity_filter_value import VulnerabilitySeverityFilterValue
from .vulnerability_state_filter_value import VulnerabilityStateFilterValue


class UpdateFindingRequest(UncheckedBaseModel):
    severity_id: SeverityId
    severity: typing.Optional[VulnerabilitySeverityFilterValue] = pydantic_v1.Field(default=None)
    """
    severity of the finding
    """

    state: typing.Optional[VulnerabilityStateFilterValue] = pydantic_v1.Field(default=None)
    """
    state of the finding
    """

    unmapped: typing.Optional[ProviderSpecificFindingState] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
