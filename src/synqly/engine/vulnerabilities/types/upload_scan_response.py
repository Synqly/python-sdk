# This file was auto-generated by Fern from our API Definition.

from ...engine.types.api_response import ApiResponse
import pydantic
from ...engine.types.query_status import QueryStatus
import typing
from ...common.types.problem import Problem
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class UploadScanResponse(ApiResponse):
    scan_id: str = pydantic.Field()
    """
    ID of the scan.
    """

    status: QueryStatus = pydantic.Field()
    """
    Specifies the status of the upload scan job, which can be COMPLETE or PENDING.
    """

    errors: typing.Optional[Problem] = pydantic.Field(default=None)
    """
    Provides additional details about any errors encountered during the upload scan operation.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
