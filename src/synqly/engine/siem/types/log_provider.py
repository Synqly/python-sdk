# This file was auto-generated by Fern from our API Definition.

from ...core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class LogProvider(UncheckedBaseModel):
    source: typing.Optional[str] = pydantic.Field(default=None)
    """
    Some backing providers have multiple log source types. When available, this metadata provides an indication of the backing provider' log provider type.
    """

    name: str = pydantic.Field()
    """
    Name of the log provider, usable as a filter value for metadata.log_provider when querying for events.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
