# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class IdentityClassOv(str, enum.Enum):
    INDIVIDUAL = "individual"
    GROUP = "group"
    SYSTEM = "system"
    ORGANIZATION = "organization"
    CLASS = "class"
    UNKNOWN = "unknown"

    def visit(
        self,
        individual: typing.Callable[[], T_Result],
        group: typing.Callable[[], T_Result],
        system: typing.Callable[[], T_Result],
        organization: typing.Callable[[], T_Result],
        class_: typing.Callable[[], T_Result],
        unknown: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is IdentityClassOv.INDIVIDUAL:
            return individual()
        if self is IdentityClassOv.GROUP:
            return group()
        if self is IdentityClassOv.SYSTEM:
            return system()
        if self is IdentityClassOv.ORGANIZATION:
            return organization()
        if self is IdentityClassOv.CLASS:
            return class_()
        if self is IdentityClassOv.UNKNOWN:
            return unknown()
