# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class FieldType(str, enum.Enum):
    STRING = "STRING"
    NUMBER = "NUMBER"
    BOOLEAN = "BOOLEAN"
    DATETIME = "DATETIME"
    DATE = "DATE"
    JSON_STRING = "JSON_STRING"

    def visit(
        self,
        string: typing.Callable[[], T_Result],
        number: typing.Callable[[], T_Result],
        boolean: typing.Callable[[], T_Result],
        datetime: typing.Callable[[], T_Result],
        date: typing.Callable[[], T_Result],
        json_string: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is FieldType.STRING:
            return string()
        if self is FieldType.NUMBER:
            return number()
        if self is FieldType.BOOLEAN:
            return boolean()
        if self is FieldType.DATETIME:
            return datetime()
        if self is FieldType.DATE:
            return date()
        if self is FieldType.JSON_STRING:
            return json_string()
