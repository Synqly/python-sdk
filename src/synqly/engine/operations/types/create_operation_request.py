# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ...core.unchecked_base_model import UncheckedBaseModel
from ...operation_base.types.operation_input import OperationInput
from ...operation_base.types.operation_schedule import OperationSchedule


class CreateOperationRequest(UncheckedBaseModel):
    schedule: typing.Optional[OperationSchedule] = pydantic_v1.Field(default=None)
    """
    Run now or on the specified schedule.
    """

    operation: str = pydantic_v1.Field()
    """
    Name of the operation that will be run for this operation.
    """

    input: OperationInput = pydantic_v1.Field()
    """
    Input parameters to the operation that will be run for this operation.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
