# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...common.types.id import Id
from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ...core.unchecked_base_model import UncheckedBaseModel
from ...engine.types.object import Object
from .escalation_policy_rule import EscalationPolicyRule


class EscalationPolicy(UncheckedBaseModel):
    """
    The escalation policy object describes an escalation policy for a ticket. It contains an id for the escalation policy, an optional name, an optional description, and a list of rules.
    """

    id: Id
    name: typing.Optional[str] = None
    description: typing.Optional[str] = None
    rules: typing.List[EscalationPolicyRule]
    unmapped: typing.Optional[Object] = pydantic_v1.Field(default=None)
    """
    The attributes that are not mapped to the comment schema. The names and values of those attributes are specific to the provider.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
