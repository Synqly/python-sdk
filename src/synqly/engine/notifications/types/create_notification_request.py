# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ...core.unchecked_base_model import UncheckedBaseModel
from ...ticketing.types.priority import Priority


class CreateNotificationRequest(UncheckedBaseModel):
    """
    Notification object
    """

    name: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    This field is deprecated and no longer used.
    """

    summary: str = pydantic_v1.Field()
    """
    Notification summary.
    """

    priority: typing.Optional[Priority] = pydantic_v1.Field(default=None)
    """
    Notification priority
    """

    project: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Notification project
    """

    status: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The current status of the notification.
    """

    description: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Notification description.
    """

    issue_type: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The notification's type.
    """

    creator: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The user who created this notification.
    """

    assignee: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Who notification is assigned to.
    """

    contact: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The notification contact information.
    """

    tags: typing.Optional[typing.List[str]] = pydantic_v1.Field(default=None)
    """
    Associate tags with Notification
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
