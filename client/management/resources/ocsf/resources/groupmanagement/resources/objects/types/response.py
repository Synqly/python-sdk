# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ........core.datetime_utils import serialize_datetime


class Response(pydantic.BaseModel):
    """
    The Response Elements object describes characteristics of an API response.
    """

    code: typing.Optional[int] = pydantic.Field(description="The numeric response sent to a request.")
    error: typing.Optional[str] = pydantic.Field(description="Error Code")
    error_message: typing.Optional[str] = pydantic.Field(description="Error Message")
    flags: typing.Optional[typing.List[str]] = pydantic.Field(
        description="The list of communication flags, normalized to the captions of the flag_ids values. In the case of 'Other', they are defined by the event source."
    )
    message: typing.Optional[str] = pydantic.Field(
        description="The description of the event, as defined by the event source."
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
