# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from .category_id import CategoryId
from .provider_id import ProviderId


class Category(pydantic.BaseModel):
    """
    Provides details on an available Integration.
    """

    category: CategoryId
    description: str = pydantic.Field(description="Description of what this Integration does.")
    providers: typing.List[ProviderId] = pydantic.Field(
        description="List of Providers that implement this Integration."
    )
    picture: typing.Optional[str] = pydantic.Field(description="URL of the icon representing this type of Integration.")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
