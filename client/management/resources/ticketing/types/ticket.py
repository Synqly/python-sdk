# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from ...common.types.base import Base
from .priority import Priority
from .ticket_id import TicketId


class Ticket(Base):
    """
    Ticketing ticket
    """

    id: TicketId
    creator: str = pydantic.Field(description="User who created this ticket.")
    assignee: str = pydantic.Field(description="Who ticket is assigned to.")
    contact: str = pydantic.Field(description="Ticket contact information.")
    description: str = pydantic.Field(description="Ticket description.")
    summary: str = pydantic.Field(description="Ticket summary.")
    priority: Priority = pydantic.Field(description="The priority of the Ticket")
    due_date: dt.datetime = pydantic.Field(description="The ticket's due date.")
    completion_date: dt.datetime = pydantic.Field(description="The ticket's complete date.")
    status: str = pydantic.Field(description="The current status of the ticket.")
    project: str = pydantic.Field(description="The ticket project.")
    issue_type: str = pydantic.Field(description="The ticket's type.")
    attachments: typing.List[str] = pydantic.Field(description="Associate attachment URLs with ticket")
    tags: typing.List[str] = pydantic.Field(description="Associate tags with Ticket")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
